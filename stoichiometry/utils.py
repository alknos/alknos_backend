oxidation_numbers = {
    "Ac": 3,
    "Al": 3,
    "Am": 3,
    "Sb": 3,
    "Ar": 0,
    "As": 3,
    "At": -1,
    "S": [-2, 2, 4, 6],
    "Ba": 2,
    "Be": 2,
    "Bk": 3,
    "Bi": 3,
    "Bh": None,
    "B": 3,
    "Br": [-1, 1, 3, 5, 7],
    "Cd": 2,
    "Ca": 2,
    "Cf": 3,
    "C": [-2, +2, +4],
    "Ce": 3,
    "Cs": 1,
    "Zr": 4,
    "Cl": [-1, 1, 3, 5, 7],
    "Co": [2, 3],
    "Cu": [1, 2],
    "Cn": None,
    "Cr": [2, 3, 4, 5, 6],
    "Cm": 3,
    "Ds": None,
    "Dy": 3,
    "Db": None,
    "Es": 3,
    "Er": 3,
    "Sc": 3,
    "Sn": [4, 2],
    "Sr": 2,
    "Eu": 3,
    "Fm": 3,
    "Fl": 2,
    "F": -1,
    "Fr": 1,
    "P": [-3, 3, 5],
    "Gd": 3,
    "Ga": 3,
    "Ge": 4,
    "Hf": 4,
    "Hs": None,
    "He": 0,
    "H": 1,
    "Fe": [2, 3],
    "Ho": 3,
    "In": 3,
    "Ir": [4, 1],
    "Yb": 3,
    "Y": 3,
    "Kr": 2,
    "La": 3,
    "Lr": 3,
    "Li": 1,
    "Lv": None,
    "Lu": 3,
    "Mg": 2,
    "Mn": [2, 4, 6, 7],
    "Mt": None,
    "Md": 3,
    "Hg": [1, 2],
    "Mo": 6,
    "Mc": None,
    "Nd": 3,
    "Np": 5,
    "Ne": 0,
    "Nh": 1,
    "Nb": 5,
    "N": [-3, 1, 2, 3, 4, 5],
    "No": 3,
    "Ni": 2,
    "Og": None,
    "Au": 3,
    "Os": 4,
    "O": -2,
    "Pd": 2,
    "Ag": 1,
    "Pt": [2, 4],
    "Pb": 2,
    "Pu": 4,
    "Po": 4,
    "K": 1,
    "Pr": 3,
    "Pm": 3,
    "Pa": 5,
    "Ra": 2,
    "Rn": 2,
    "Re": [4, 7],
    "Rh": 3,
    "Rg": None,
    "Rb": 1,
    "Ru": [3, 4],
    "Rf": 4,
    "Sm": 3,
    "Sg": None,
    "Se": 4,
    "Si": 4,
    "Na": 1,
    "Tl": 1,
    "Tc": 7,
    "Te": 4,
    "Ts": None,
    "Tb": 3,
    "Ti": 4,
    "Th": 4,
    "Tm": 3,
    "Ta": 5,
    "U": 6,
    "V": 5,
    "W": 6,
    "Xe": 8,
    "I": -1,
    "Zn": 2,
}


def convert_equation(equation: str) -> str:
    subscripts = {'₀': '0', '₁': '1', '₂': '2', '₃': '3', '₄': '4', '₅': '5', '₆': '6', '₇': '7', '₈': '8', '₉': '9'}
    for subscript, replacement in subscripts.items():
        equation = equation.replace(subscript, replacement)
    new_equation = ""
    for i in range(len(equation)):
        if equation[i].isdigit() and equation[i] == '1':
            if i > 0 and i < len(equation)-1:
                if not equation[i-1].isdigit() and not equation[i+1].isdigit():
                    continue
                if i > 1 and equation[i-1].isspace() and not equation[i+1].isdigit():
                    continue
                if i > 1 and equation[i+1].isspace() and not equation[i-1].isdigit():
                    continue
            else:
                if i == 0 and not equation[i+1].isdigit():
                    continue
                if i == len(equation)-1 and not equation[i-1].isdigit():
                    continue
        new_equation += equation[i]
    return new_equation